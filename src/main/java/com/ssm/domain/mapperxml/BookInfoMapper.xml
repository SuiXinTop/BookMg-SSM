<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.dao.BookInfoMapper">
    <resultMap id="BaseResultMap" type="com.ssm.domain.BookInfo">
        <id column="bookid" jdbcType="INTEGER" property="bookid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="publish" jdbcType="VARCHAR" property="publish"/>
        <result column="ISBN" jdbcType="VARCHAR" property="isbn"/>
        <result column="introduction" jdbcType="VARCHAR" property="introduction"/>
        <result column="language" jdbcType="VARCHAR" property="language"/>
        <result column="price" jdbcType="DOUBLE" property="price"/>
        <result column="pubdate" jdbcType="VARCHAR" property="pubdate"/>
        <result column="cid" jdbcType="INTEGER" property="cid"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
    </resultMap>
    <sql id="Base_Column_List">
        bookid,name,author,publish,ISBN,introduction,language,pubdate,cid,stock
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select *
        from bookinfo
        where bookid = #{bookid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from bookinfo
        where bookid = #{bookid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.ssm.domain.BookInfo">
        insert into bookinfo (bookid, name, author,
                              publish, ISBN, introduction,
                              language, price, pubdate,
                              cid, stock)
        values (#{bookid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR},
                #{publish,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR},
                #{language,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{pubdate,jdbcType=VARCHAR},
                #{cid,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.ssm.domain.BookInfo">
        insert into bookinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bookid != null">
                bookid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="publish != null">
                publish,
            </if>
            <if test="isbn != null">
                ISBN,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
            <if test="language != null">
                language,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="pubdate != null">
                pubdate,
            </if>
            <if test="cid != null">
                cid,
            </if>
            <if test="stock != null">
                stock,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bookid != null">
                #{bookid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="publish != null">
                #{publish,jdbcType=VARCHAR},
            </if>
            <if test="isbn != null">
                #{isbn,jdbcType=VARCHAR},
            </if>
            <if test="introduction != null">
                #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="language != null">
                #{language,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DOUBLE},
            </if>
            <if test="pubdate != null">
                #{pubdate,jdbcType=VARCHAR},
            </if>
            <if test="cid != null">
                #{cid,jdbcType=INTEGER},
            </if>
            <if test="stock != null">
                #{stock,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ssm.domain.BookInfo">
        update bookinfo
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="publish != null">
                publish = #{publish,jdbcType=VARCHAR},
            </if>
            <if test="isbn != null">
                ISBN = #{isbn,jdbcType=VARCHAR},
            </if>
            <if test="introduction != null">
                introduction = #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="language != null">
                language = #{language,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="pubdate != null">
                pubdate = #{pubdate,jdbcType=VARCHAR},
            </if>
            <if test="cid != null">
                cid = #{cid,jdbcType=INTEGER},
            </if>
            <if test="stock != null">
                stock = #{stock,jdbcType=INTEGER},
            </if>
        </set>
        where bookid = #{bookid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ssm.domain.BookInfo">
        update bookinfo
        set name         = #{name,jdbcType=VARCHAR},
            author       = #{author,jdbcType=VARCHAR},
            publish      = #{publish,jdbcType=VARCHAR},
            ISBN         = #{isbn,jdbcType=VARCHAR},
            introduction = #{introduction,jdbcType=VARCHAR},
            language     = #{language,jdbcType=VARCHAR},
            price        = #{price,jdbcType=DOUBLE},
            pubdate      = #{pubdate,jdbcType=VARCHAR},
            cid          = #{cid,jdbcType=INTEGER},
            stock        = #{stock,jdbcType=INTEGER}
        where bookid = #{bookid,jdbcType=INTEGER}
    </update>
</mapper>